.b-hot_topics-v2
  .subject = t '.hot_topics'

  / - unless layout.moderation_policy.critiques_count.zero?
  /   - unless current_user.admin? && layout.moderation_policy.critiques_count < 100
  /     a.b-link.b-tooltipped.unprocessed.moderation[
  /       href=moderations_critiques_url
  /       data-direction='bottom'
  /     ]
  /       = "#{i18n_i 'Critique'}: #{layout.moderation_policy.critiques_count}"
  / 
  / - unless layout.moderation_policy.names_versions_count.zero?
  /   - unless current_user.admin? && layout.moderation_policy.names_versions_count < 100
  /     a.b-link.b-tooltipped.unprocessed.moderation[
  /       href=moderations_versions_url(type: :names)
  /       data-direction='bottom'
  /     ]
  /       = "#{t '.names'}: #{layout.moderation_policy.names_versions_count}"
  / 
  / - unless layout.moderation_policy.texts_versions_count.zero?
  /   - unless current_user.admin? && layout.moderation_policy.texts_versions_count < 100
  /     a.b-link.b-tooltipped.unprocessed.moderation[
  /       href=moderations_versions_url(type: :texts)
  /       data-direction='bottom'
  /     ]
  /       = "#{t '.texts'}: #{layout.moderation_policy.texts_versions_count}"
  / 
  / - unless layout.moderation_policy.fansub_versions_count.zero?
  /   - unless current_user.admin? && layout.moderation_policy.fansub_versions_count < 100
  /     a.b-link.b-tooltipped.unprocessed.moderation[
  /       href=moderations_versions_url(type: :fansub)
  /       data-direction='bottom'
  /     ]
  /       = "#{t '.fansub'}: #{layout.moderation_policy.fansub_versions_count}"
  / 
  / - unless layout.moderation_policy.content_versions_count.zero?
  /   // TODO: uncomment when new moderators are found
  /   // - unless (current_user.admin? && layout.moderation_policy.content_versions_count < 100) || (current_user.version_fansub_moderator? && layout.moderation_policy.content_versions_count < 30) || (current_user.version_texts_moderator? && layout.moderation_policy.content_versions_count < 30)
  /   - unless current_user.admin? && layout.moderation_policy.content_versions_count < 100
  /     a.b-link.b-tooltipped.unprocessed.moderation[
  /       href=moderations_versions_url(type: :content)
  /       data-direction='bottom'
  /       class=(:misc if current_user.version_texts_moderator? || current_user.version_fansub_moderator?)
  /     ]
  /       = "#{t '.content'}: #{layout.moderation_policy.content_versions_count}"
  / 
  / - unless layout.moderation_policy.abuse_requests_total_count.zero?
  /   // TODO: uncomment when new moderators are found
  /   // - unless (current_user.admin? && layout.moderation_policy.abuse_requests_total_count < 100) || (current_user.super_moderator? && layout.moderation_policy.abuse_requests_total_count < 30)
  /   - unless current_user.admin? && layout.moderation_policy.abuse_requests_total_count < 100
  /     a.b-link.b-tooltipped.unprocessed.moderation[
  /       href=moderations_bans_url
  /       data-direction='bottom'
  /       class=(:misc if current_user.super_moderator?)
  /     ]
  /       = "#{i18n_i 'Forum'}: #{layout.moderation_policy.abuse_requests_total_count}"

  - layout.moderation_hot_stat.each do |stat|
    a.b-link.moderation href=stat[:url]
    /   class=(:misc if current_user.super_moderator?)
      = "#{stat[:label]}: #{stat[:count]}"

  - cache :hot_topics, expires_in: 10.minutes do
    - layout.hot_topics.each do |topic_view|
      a.b-link[
        href=topic_view.urls.topic_url
        title=topic_view.topic_title
        tabindex='-1'
      ]
        span.poster[
          style="background-image: url(#{topic_view.poster_image_url false})"
        ]
        span
          = topic_view.poster_title_html
