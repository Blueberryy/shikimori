.block
  .subheadline = t '.synchronization'
  .fc-2
    .f-column
      ul.b-list.is-wide
        li
          .field = resource.class.human_attribute_name(:imported_at)
          .value
            - if resource.imported_at
              span.time
                time[
                  datetime=resource.imported_at.iso8601
                ] = l resource.imported_at, format: '%e %B %Y %H:%m'

            - if can?(:sync, resource) && resource.mal_id
              - is_syncing = Rails.cache.read([resource.object.class.base_class.name.downcase, :sync, resource.id])
              - need_sync = !resource.imported_at || resource.imported_at < 1.minutes.ago
              - did_sync = resource.imported_at && resource.imported_at > DbEntriesController::SYNC_EXPIRATION.ago

              - if need_sync && !is_syncing
                a.b-button.run-mal-parser[
                  href=resource.sync_url
                  data-method='post'
                  data-confirm=t('actions.confirm_sync')
                ] = t '.sync'

              - elsif is_syncing && !did_sync
                span
                  b = t '.syncing'
          - if can? :sync, resource
            .value
              .hint
                ' Шикимори кеширует загруженные c MAL страницы аниме и манги на 1 час,
                ' а страницы персонажей и людей на 8 часов. Повторный запуск синхронизации ничего
                | не изменит до тех пор, пока не истечёт время жизни кеша.

        li
          .field = resource.class.human_attribute_name(:desynced)
          .value
            span = resource.desynced.join(', ')
            - if can? :restricted_update, Version.new(item: @resource.object, item_diff: { desynced: [] })
              a.b-js-action href=resource.edit_field_url(:desynced)
                = t 'moderators_only'
            - else
              .b-js-action = t 'moderators_only'

        - if can?(:sync, resource) && resource.mal_id
          li
            .field = @resource.class.human_attribute_name(:image)
            .value
              - is_refreshing = Rails.cache.read([resource.object.class.base_class.name.downcase, :refresh_poster, resource.id])
              - if is_refreshing && @resource.image.blank?
                span
                  b = t '.syncing'
              - else
                a.b-button.run-poster-updater[
                  href=resource.refresh_poster_url
                  data-method='post'
                  data-confirm=t('actions.confirm_sync')
                ] = t '.refresh'

    - if can? :restricted_update, Version
      .f-column
        ul.b-list.is-wide
          - if resource.mal_id
            li
              = render ExternalLink.new(entry: resource, kind: :myanimelist, source: :myanimelist, url: resource.mal_url)

          - if resource.respond_to?(:smotret_anime_external_link) && resource.smotret_anime_external_link
            li
              = render resource.smotret_anime_external_link
