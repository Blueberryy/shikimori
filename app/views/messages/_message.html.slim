.b-message.to-process[
  class=('b-generated_news' if message.for_generated_news_topic?)
  id=message.id
  data-dynamic='message'
  data-appear_type='message'
  data-user_id=message.from.id
  data-user_nickname=message.from.nickname
  data-selection_boundary
]
  .inner[
    class=(:broken if message.broken?)
  ]
    - if message.persisted?
      span.item-mobile title=i18n_i('Action', :other)
      aside.markers
        - if message.to == current_user
          - if !message.read || ![MessageType::FRIEND_REQUEST, MessageType::CLUB_REQUEST].include?(message.kind)
            .b-new_marker.active[
              class=(:off if message.read)
              data-appear_url=mark_read_api_messages_url(is_read: '1')
              data-reappear='true'
              data-reappear_url=mark_read_api_messages_url(is_read: '0')
              data-text=t('markers.new')
            ]

      = render 'messages/buttons',
        message: message,
        reply_as_link: local_assigns[:reply_as_link]

    - if message.broken?
      header
        .name-date
          a.name = t '.broken.header'
      .body
        .b-nothing_here = t '.broken.body'
        - if !message.read && message.to == current_user
          .b-appear_marker.active[
            class="appear-message-#{message.id}"
          ]
    - else
      header
        - unless message.for_generated_news_topic?
          span.linkeable data-href=message.url
            img[
              src=message.image
              srcset="#{message.image_2x} 2x"
              alt=message.title
            ]
        .name-date
          - if message.action_tag
            .b-anime_status_tag[
              class=message.action_tag.type
              data-text=message.action_tag.text
            ]

          a.name href=message.url title=message.title
            = message.title

          - if message.club_broadcast?
            span.broadcast-by
              = t '.broadcast_by'
            = render 'users/user_16', user: message.linked.user

          - if message.persisted?
            span.time: time[
              datetime=message.created_at.iso8601
            ] = l message.created_at, format: '%e %B %Y'

      .body
        - if message.for_generated_news_topic?
          .b-catalog-entry-embedded
            = render message.linked.linked.decorate,
              cover_title: :none,
              cover_notice: :none,
              cover_derivative: :preview,
              content_by: :block,
              content_title: :none,
              content_text: :none

        - else
          = message.generate_body

        - if message.kind == MessageType::SITE_NEWS && message.linked
          a.right.to-entry.b-link[
            href=UrlGenerator.instance.topic_url(message.linked)
          ] = t '.to_topic'

        - if !message.read && message.to == current_user
          .b-appear_marker.active[
            class="appear-message-#{message.id}"
          ]
            / data-disabled="#{[MessageType::FRIEND_REQUEST, MessageType::CLUB_REQUEST].include?(message.kind)}"
